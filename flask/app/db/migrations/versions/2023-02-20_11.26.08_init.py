"""init

Revision ID: 86e588c8d05a
Revises: 
Create Date: 2023-02-20 11:26:08.930135

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "86e588c8d05a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("id", sa.UUID(), nullable=False, comment="id записи"),
        sa.Column(
            "name",
            sa.String(length=72),
            nullable=False,
            comment="Название роли",
        ),
        sa.Column(
            "description",
            sa.String(length=512),
            nullable=False,
            comment="Описание роли",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_roles")),
        sa.UniqueConstraint("id", name=op.f("uq_roles_id")),
        sa.UniqueConstraint("name", name=op.f("uq_roles_name")),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False, comment="id Пользователя"),
        sa.Column(
            "login",
            sa.String(length=72),
            nullable=False,
            comment="Логин пользователя",
        ),
        sa.Column(
            "email",
            sa.String(length=320),
            nullable=False,
            comment="Email пользователя",
        ),
        sa.Column(
            "password_hash",
            sa.String(length=128),
            nullable=False,
            comment="Хэш пароля пользователя",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("id", name=op.f("uq_users_id")),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_users_login"), ["login"], unique=True
        )

    op.create_table(
        "jwt_store",
        sa.Column("id", sa.UUID(), nullable=False, comment="id записи"),
        sa.Column("jwt_id", sa.String(length=36), nullable=False),
        sa.Column("expiration_date", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("type", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_jwt_store_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_jwt_store")),
        sa.UniqueConstraint("id", name=op.f("uq_jwt_store_id")),
    )
    with op.batch_alter_table("jwt_store", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_jwt_store_jwt_id"), ["jwt_id"], unique=False
        )

    op.create_table(
        "login_history",
        sa.Column("id", sa.UUID(), nullable=False, comment="id Записи"),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column(
            "ip",
            sa.String(length=45),
            nullable=False,
            comment="IP пользователя",
        ),
        sa.Column(
            "user_agent",
            sa.Text(),
            nullable=False,
            comment="User-Agent пользователя",
        ),
        sa.Column(
            "datetime",
            sa.DateTime(),
            nullable=False,
            comment="Дата и время входа",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_login_history_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_login_history")),
        sa.UniqueConstraint("id", name=op.f("uq_login_history_id")),
    )
    op.create_table(
        "user_role",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("role_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
            name=op.f("fk_user_role_role_id_roles"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_role_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_role")),
        sa.UniqueConstraint("id", name=op.f("uq_user_role_id")),
        sa.UniqueConstraint(
            "user_id", "role_id", name=op.f("uq_user_role_user_id")
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_role")
    op.drop_table("login_history")
    with op.batch_alter_table("jwt_store", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_jwt_store_jwt_id"))

    op.drop_table("jwt_store")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_login"))

    op.drop_table("users")
    op.drop_table("roles")
    # ### end Alembic commands ###
